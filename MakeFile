# Compiler and flags for 64-bit x86 (native)
CC = 
CFLAGS = -ffreestanding -O2 -Wall -Wextra -m64
LDFLAGS = -T linker.ld
AS = nasm
ASFLAGS = -f elf64

# Directories
SRC_DIR = src
OBJ_DIR = obj
BOOT_DIR = boot
ISO_DIR = iso

# Source files
KERNEL_SRC = $(wildcard $(SRC_DIR)/*.c)
KERNEL_OBJ = $(KERNEL_SRC:$(SRC_DIR)/%.c=$(OBJ_DIR)/%.o)

# Bootloader (if written in Assembly)
BOOT_SRC = $(BOOT_DIR)/bootloader.asm
BOOT_OBJ = $(OBJ_DIR)/bootloader.o

# Output files
KERNEL_BIN = $(ISO_DIR)/boot/kernel.bin
BOOT_BIN = $(ISO_DIR)/boot/bootloader.bin

# Default target
all: iso

# Compile kernel source files
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) -c $< -o $@

# Assemble bootloader
$(BOOT_OBJ): $(BOOT_SRC)
	$(AS) $(ASFLAGS) -o $@ $<

# Link kernel
$(KERNEL_BIN): $(KERNEL_OBJ) $(BOOT_OBJ)
	$(CC) $(LDFLAGS) -o $@ $(KERNEL_OBJ) $(BOOT_OBJ)

# Make bootable ISO
iso: $(KERNEL_BIN)
	cp -r grub.cfg $(ISO_DIR)/boot/grub/
	grub-mkrescue -o myos.iso $(ISO_DIR)

# Clean build files
clean:
	rm -rf $(OBJ_DIR)/*.o $(KERNEL_BIN) myos.iso
